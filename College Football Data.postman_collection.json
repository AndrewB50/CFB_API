{
	"info": {
		"_postman_id": "aeaa9e88-7983-4779-8814-ceb9f05fc0a2",
		"name": "College Football Data",
		"description": "This is an API for accessing all sorts of college football data. Access thousands of individual games to over 1800 schools, and much more stats and info regarding current and historical College Football information.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32925208"
	},
	"item": [
		{
			"name": "Games",
			"item": [
				{
					"name": "Games and Results",
					"item": [
						{
							"name": "Game Results",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Seaon Data Available\", function () {",
											"    const seasonYear = pm.response.json()[0].season;",
											"    pm.expect(seasonYear).to.exist;",
											"});",
											"",
											"pm.test(\"Response is an array\", function() {",
											"    pm.expect(pm.response.json()).to.be.a('array');",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//Year is required for successful call. Ex: 1999",
											"//Set the season(year) you want to search",
											"pm.environment.set(\"year\", \"\");",
											"",
											"//Set the team you want to search",
											"pm.environment.set(\"team\", \"\");",
											"",
											"//Set season type: regular or postseason",
											"pm.environment.set(\"seasonType\", \"\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseURL}}games?year={{year}}&week={{week}}&seasonType={{seasonType}}&team={{team}}",
									"host": [
										"{{baseURL}}games"
									],
									"query": [
										{
											"key": "year",
											"value": "{{year}}"
										},
										{
											"key": "week",
											"value": "{{week}}"
										},
										{
											"key": "seasonType",
											"value": "{{seasonType}}"
										},
										{
											"key": "team",
											"value": "{{team}}"
										}
									]
								},
								"description": "Get game results by specifying year, and team. Further specification includes which week of the given season and season type."
							},
							"response": []
						},
						{
							"name": "Home Games by Season/Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Seaon Data Available\", function () {",
											"    const seasonYear = pm.response.json()[0].season;",
											"    pm.expect(seasonYear).to.exist;",
											"});",
											"",
											"pm.test(\"Response is an array\", function() {",
											"    pm.expect(pm.response.json()).to.be.a('array');",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"seasonType\", \"\");",
											"//Year is required for successful call. Ex: 1999",
											"//Set the season(year) you want to search",
											"pm.environment.set(\"year\", \"\");",
											"//Set the team you want to search",
											"pm.environment.set(\"team\", \"\");",
											"//This makes the team you search default to the home team",
											"setHomeTeam = () => {",
											"    homeTeam = pm.environment.get(\"\");",
											"    pm.environment.set(\"home\", homeTeam);",
											"};",
											"setHomeTeam();"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseURL}}games?year={{year}}&team={{team}}&home={{home}}",
									"host": [
										"{{baseURL}}games"
									],
									"query": [
										{
											"key": "year",
											"value": "{{year}}"
										},
										{
											"key": "team",
											"value": "{{team}}"
										},
										{
											"key": "home",
											"value": "{{home}}"
										}
									]
								},
								"description": "Find all home game results of a team by year."
							},
							"response": []
						},
						{
							"name": "Away Games by Season/Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Seaon Data Available\", function () {",
											"    const seasonYear = pm.response.json()[0].season;",
											"    pm.expect(seasonYear).to.exist;",
											"});",
											"",
											"pm.test(\"Response is an array\", function() {",
											"    pm.expect(pm.response.json()).to.be.a('array');",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"seasonType\", \"\");",
											"//Year is required for successful call. Ex: 1999",
											"//Set the season(year) you want to search",
											"pm.environment.set(\"year\", \"\");",
											"//Set the team you want to search",
											"pm.environment.set(\"team\", \"\");",
											"//This makes the team you search default to the home team",
											"setAwayTeam = () => {",
											"    awayTeam = pm.environment.get(\"\");",
											"    pm.environment.set(\"away\", awayTeam);",
											"};",
											"setAwayTeam();"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseURL}}games?year={{year}}&seasonType={{seasonType}}&team={{team}}&away={{away}}",
									"host": [
										"{{baseURL}}games"
									],
									"query": [
										{
											"key": "year",
											"value": "{{year}}"
										},
										{
											"key": "seasonType",
											"value": "{{seasonType}}"
										},
										{
											"key": "team",
											"value": "{{team}}"
										},
										{
											"key": "away",
											"value": "{{away}}"
										}
									]
								},
								"description": "Find all away game results of a team by year."
							},
							"response": []
						},
						{
							"name": "Post-Season Game(s)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"seasonType\", \"\");",
											"//Year is required for successful call. Ex: 1999",
											"//Set the season(year) you want to search",
											"pm.environment.set(\"year\", \"\");",
											"//Set the team you want to search",
											"pm.environment.set(\"team\", \"\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Post-seaon Data Available for this Team\", function () {",
											"    const seasonYear = pm.response.json()[0].season;",
											"    pm.expect(seasonYear).to.exist;",
											"});",
											"",
											"pm.test(\"Response is an array\", function() {",
											"    pm.expect(pm.response.json()).to.be.a('array');",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseURL}}games?year={{year}}&seasonType=postseason&team={{team}}",
									"host": [
										"{{baseURL}}games"
									],
									"query": [
										{
											"key": "year",
											"value": "{{year}}"
										},
										{
											"key": "seasonType",
											"value": "postseason"
										},
										{
											"key": "team",
											"value": "{{team}}"
										}
									]
								},
								"description": "Find the post-season results of a team from a given season."
							},
							"response": []
						}
					],
					"description": "Search for full game results. Can search using the following information:\n\n- Team name\n    \n    - Can specify Home and Away\n        \n- Year\n    \n- Week\n    \n- Season type\n    \n    - Regular or Post-season"
				},
				{
					"name": "Season Calendar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseURL}}calendar?year={{year}}",
							"host": [
								"{{baseURL}}calendar"
							],
							"query": [
								{
									"key": "year",
									"value": "{{year}}"
								}
							]
						},
						"description": "Find all weeks for college football of a given year."
					},
					"response": []
				},
				{
					"name": "Media Information and Schedules",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Valid year is specified\", function() {",
									"    pm.expect(pm.response.json()[0].season).to.be.below(2024)",
									"    pm.expect(pm.response.json()[0].season).to.be.above(2002);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"year\", \"\");",
									"",
									"pm.environment.set(\"seasonType\", \"\");",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}games/media?year={{year}}&seasonType={{seasonType}}",
							"host": [
								"{{baseURL}}games"
							],
							"path": [
								"media"
							],
							"query": [
								{
									"key": "year",
									"value": "{{year}}"
								},
								{
									"key": "seasonType",
									"value": "{{seasonType}}"
								},
								{
									"key": "week",
									"value": "{{week}}",
									"disabled": true
								},
								{
									"key": "team",
									"value": "{{team}}",
									"disabled": true
								},
								{
									"key": "mediaType",
									"value": "{{mediaType}}",
									"disabled": true
								},
								{
									"key": "classification",
									"value": "{{classification}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Player Game Stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"year\", \"\");",
									"pm.environment.set(\"week\", \"\");",
									"pm.environment.set(\"team\", \"\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}games/players?year={{year}}&week={{week}}&team={{team}}",
							"host": [
								"{{baseURL}}games"
							],
							"path": [
								"players"
							],
							"query": [
								{
									"key": "year",
									"value": "{{year}}"
								},
								{
									"key": "week",
									"value": "{{week}}"
								},
								{
									"key": "seasonType",
									"value": "{{seasonType}}",
									"disabled": true
								},
								{
									"key": "team",
									"value": "{{team}}"
								},
								{
									"key": "conference",
									"value": "{{conference}}",
									"disabled": true
								},
								{
									"key": "category",
									"value": "{{category}}",
									"disabled": true
								},
								{
									"key": "gameId",
									"value": "{{gameId}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Team Game Stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}games/teams?year={{year}}",
							"host": [
								"{{baseURL}}games"
							],
							"path": [
								"teams"
							],
							"query": [
								{
									"key": "year",
									"value": "{{year}}"
								},
								{
									"key": "week",
									"value": "{{week}}",
									"disabled": true
								},
								{
									"key": "seasonType",
									"value": "{{seasonType}}",
									"disabled": true
								},
								{
									"key": "team",
									"value": "{{team}}",
									"disabled": true
								},
								{
									"key": "conference",
									"value": "{{conference}}",
									"disabled": true
								},
								{
									"key": "gameId",
									"value": "{{gameId}}",
									"disabled": true
								},
								{
									"key": "classification",
									"value": "{{classification}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Advanced Box Scores",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//set year",
									"pm.environment.set(\"year\", \"\")",
									"",
									"//set week",
									"pm.environment.set(\"week\", \"\")",
									"",
									"//set season type",
									"pm.environment.set(\"seasonType\", \"\")",
									"",
									"//set team",
									"pm.environment.set(\"team\", \"\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}games/teams?year={{year}}&week={{week}}&seasonType={{seasonType}}&team={{team}}",
							"host": [
								"{{baseURL}}games"
							],
							"path": [
								"teams"
							],
							"query": [
								{
									"key": "year",
									"value": "{{year}}"
								},
								{
									"key": "week",
									"value": "{{week}}"
								},
								{
									"key": "seasonType",
									"value": "{{seasonType}}"
								},
								{
									"key": "team",
									"value": "{{team}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "This folder contains a list of similar API calls. Searching by season, the user can look at:\n\n- Game results\n    \n    - Regular-season, post-season, home games, and away games\n        \n- Season calendar for each season\n    \n- Media information for each game\n    \n- Team and Player stats for individual games\n    \n- Advanced box scores"
		},
		{
			"name": "Drives",
			"item": [
				{
					"name": "Drive Data and Results",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}drives?seasonType={{seasonType}}&year={{minYear}}&week={{week}}&team={{team}}&offense={{team}}",
							"host": [
								"{{baseURL}}drives"
							],
							"query": [
								{
									"key": "seasonType",
									"value": "{{seasonType}}"
								},
								{
									"key": "year",
									"value": "{{minYear}}"
								},
								{
									"key": "week",
									"value": "{{week}}"
								},
								{
									"key": "team",
									"value": "{{team}}"
								},
								{
									"key": "offense",
									"value": "{{team}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plays",
			"item": [
				{
					"name": "Play Types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}play/types",
							"host": [
								"{{baseURL}}play"
							],
							"path": [
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Types of Play Stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}play/stat/types",
							"host": [
								"{{baseURL}}play"
							],
							"path": [
								"stat",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Play by Play Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}plays?seasonType={{seasonType}}&year={{year}}&week={{week}}&team={{team}}",
							"host": [
								"{{baseURL}}plays"
							],
							"query": [
								{
									"key": "seasonType",
									"value": "{{seasonType}}"
								},
								{
									"key": "year",
									"value": "{{year}}"
								},
								{
									"key": "week",
									"value": "{{week}}"
								},
								{
									"key": "team",
									"value": "{{team}}"
								},
								{
									"key": "offense",
									"value": "{{team}}",
									"disabled": true
								},
								{
									"key": "defense",
									"value": "",
									"disabled": true
								},
								{
									"key": "conference",
									"value": "",
									"disabled": true
								},
								{
									"key": "offenseConference",
									"value": "",
									"disabled": true
								},
								{
									"key": "defenseConference",
									"value": "",
									"disabled": true
								},
								{
									"key": "playType",
									"value": "",
									"disabled": true
								},
								{
									"key": "classification",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "First Down Plays in Console",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})",
									"",
									"play = pm.response.json()",
									"count = 0;",
									"//First Downs",
									"for(i = 0; i < play.length; i++) {",
									"    if (play[i].play_text.includes(\"1ST down\")) {",
									"        console.log(pm.response.json()[i].play_text);",
									"        count++;",
									"    }",
									"}",
									"console.log(count + \" First Downs\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"year\", \"\");",
									"",
									"pm.environment.set(\"week\", \"\");",
									"",
									"pm.environment.set(\"team\", \"\");",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}plays?seasonType={{seasonType}}&year={{year}}&week={{week}}&team={{team}}&offense={{team}}",
							"host": [
								"{{baseURL}}plays"
							],
							"query": [
								{
									"key": "seasonType",
									"value": "{{seasonType}}"
								},
								{
									"key": "year",
									"value": "{{year}}"
								},
								{
									"key": "week",
									"value": "{{week}}"
								},
								{
									"key": "team",
									"value": "{{team}}"
								},
								{
									"key": "offense",
									"value": "{{team}}"
								},
								{
									"key": "defense",
									"value": "{{team}}",
									"disabled": true
								},
								{
									"key": "conference",
									"value": "{{conference}}",
									"disabled": true
								},
								{
									"key": "offenseConference",
									"value": "{{offenseConference}}",
									"disabled": true
								},
								{
									"key": "defenseConference",
									"value": "{{defenseConference}}",
									"disabled": true
								},
								{
									"key": "playType",
									"value": "{{playType}}",
									"disabled": true
								},
								{
									"key": "classification",
									"value": "{{classification}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Play Stats by Play",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}plays/stats",
							"host": [
								"{{baseURL}}plays"
							],
							"path": [
								"stats"
							],
							"query": [
								{
									"key": "year",
									"value": "{{year}}",
									"disabled": true
								},
								{
									"key": "week",
									"value": "{{week}}",
									"disabled": true
								},
								{
									"key": "team",
									"value": "{{team}}",
									"disabled": true
								},
								{
									"key": "gameID",
									"value": "{{gameId}}",
									"disabled": true
								},
								{
									"key": "athleteID",
									"value": "{{athleteId}}",
									"disabled": true
								},
								{
									"key": "statTypeId",
									"value": "{{statTypeId}}",
									"disabled": true
								},
								{
									"key": "seasonType",
									"value": "{{seasonType}}",
									"disabled": true
								},
								{
									"key": "conference",
									"value": "{{conference}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Teams",
			"item": [
				{
					"name": "All Teams",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})",
									"",
									"/*",
									"//Conaole log all team names",
									"function logAllTeams(){",
									"    for (i = 0; i < pm.response.json().length; i++){",
									"        console.log(pm.response.json()[i].school);",
									"    }",
									"}",
									"",
									"logAllTeams()",
									"*/"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}teams",
							"host": [
								"{{baseURL}}teams"
							],
							"query": [
								{
									"key": "conference",
									"value": "{{conference}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "FBS Team List in Console",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})",
									"",
									"//Console log school names only",
									"let count = 0",
									"for(schoolName = 0; schoolName < pm.response.json().length; schoolName++) {",
									"    count++;",
									"    console.log(pm.response.json()[schoolName].school);",
									"}",
									"console.log(count);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}teams/fbs",
							"host": [
								"{{baseURL}}teams"
							],
							"path": [
								"fbs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Team W/L Records",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})",
									"",
									"//Format W-L record",
									"function getWinLoss() {",
									"    const wins = pm.response.json()[0].total.wins;",
									"    const losses = pm.response.json()[0].total.losses;",
									"    const team = pm.response.json()[0].team;",
									"    const year = pm.response.json()[0].year;",
									"    const wlRecord = year + \" \" + team + \": \" + wins + \"-\" + losses;",
									"    console.log(wlRecord);",
									"};",
									"getWinLoss();"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"year\", \"\");",
									"pm.environment.set(\"team\", \"\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseURL}}records?year={{year}}&team={{team}}",
							"host": [
								"{{baseURL}}records"
							],
							"query": [
								{
									"key": "year",
									"value": "{{year}}"
								},
								{
									"key": "team",
									"value": "{{team}}"
								},
								{
									"key": "conference",
									"value": "{{conference}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Team Roster",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})",
									"",
									"const rosterData = pm.response.json();",
									"//Get full name, jersey number. ",
									"for (i=0; i < rosterData.length; i++){",
									"    console.log(\"Player: \" + rosterData[i].last_name + \", \" + rosterData[i].first_name + \" || Position: \" + rosterData[i].position + \" || Jersey: \" + rosterData[i].jersey)",
									"};",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}roster?team={{team}}&year={{year}}",
							"host": [
								"{{baseURL}}roster"
							],
							"query": [
								{
									"key": "team",
									"value": "{{team}}"
								},
								{
									"key": "year",
									"value": "{{year}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Team Talent Composite Rankings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}talent?team={{team}}&year={{year}}",
							"host": [
								"{{baseURL}}talent"
							],
							"query": [
								{
									"key": "team",
									"value": "{{team}}"
								},
								{
									"key": "year",
									"value": "{{year}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Team Matchup History",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"team1\", \"\");",
									"pm.environment.set(\"team2\", \"\");",
									"pm.environment.set(\"minYear\",\"\");",
									"pm.environment.set(\"maxYear\", \"\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Basic readable format in console",
									"function wlRecord() {",
									"    const response = pm.response.json();",
									"    const team1 = response.team1;",
									"    const team2 = response.team2;",
									"    const wins = response.team1Wins;",
									"    const losses = response.team2Wins;",
									"    const wlAllTime = team1 + \" is \" + wins + \"-\" + losses + \" overall against \" + team2;",
									"    console.log(wlAllTime)",
									"}",
									"",
									"wlRecord();"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}teams/matchup?team1={{team1}}&team2={{team2}}",
							"host": [
								"{{baseURL}}teams"
							],
							"path": [
								"matchup"
							],
							"query": [
								{
									"key": "team1",
									"value": "{{team1}}"
								},
								{
									"key": "team2",
									"value": "{{team2}}"
								},
								{
									"key": "minYear",
									"value": "{{minYear}}",
									"disabled": true
								},
								{
									"key": "maxYear",
									"value": "{{maxYear}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Players",
			"item": [
				{
					"name": "Player Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Player on roster for given year\", function () {",
									"    pm.expect(pm.response.json()[0]).exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//set player name",
									"pm.environment.set(\"searchTerm\", \"\");",
									"",
									"pm.environment.set(\"year\", \"\")",
									"",
									"pm.environment.set(\"team\", \"\")",
									"",
									"pm.environment.set(\"position\", \"\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}player/search?searchTerm={{searchTerm}}&year={{year}}",
							"host": [
								"{{baseURL}}player"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "searchTerm",
									"value": "{{searchTerm}}"
								},
								{
									"key": "position",
									"value": "{{position}}",
									"disabled": true
								},
								{
									"key": "team",
									"value": "{{team}}",
									"disabled": true
								},
								{
									"key": "year",
									"value": "{{year}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Player Usage Metrics by Season",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}player/usage",
							"host": [
								"{{baseURL}}player"
							],
							"path": [
								"usage"
							],
							"query": [
								{
									"key": "position",
									"value": "{{position}}",
									"disabled": true
								},
								{
									"key": "team",
									"value": "{{position}}",
									"disabled": true
								},
								{
									"key": "year",
									"value": "{{position}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Team Returning Production Metrics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}player/returning",
							"host": [
								"{{baseURL}}player"
							],
							"path": [
								"returning"
							],
							"query": [
								{
									"key": "year",
									"value": "{{year}}",
									"disabled": true
								},
								{
									"key": "team",
									"value": "{{team}}",
									"disabled": true
								},
								{
									"key": "conference",
									"value": "{{conference}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Player Stats by Season",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}stats/player/season",
							"host": [
								"{{baseURL}}stats"
							],
							"path": [
								"player",
								"season"
							],
							"query": [
								{
									"key": "year",
									"value": "{{year}}",
									"disabled": true
								},
								{
									"key": "team",
									"value": "{{team}}",
									"disabled": true
								},
								{
									"key": "conference",
									"value": "{{conference}}",
									"disabled": true
								},
								{
									"key": "startWeek",
									"value": "{{startWeek}}",
									"disabled": true
								},
								{
									"key": "endWeek",
									"value": "{{endWeek}}",
									"disabled": true
								},
								{
									"key": "seasonType",
									"value": "{{seasonType}}",
									"disabled": true
								},
								{
									"key": "category",
									"value": "{{category}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Transfer Portal by Season",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}player/portal",
							"host": [
								"{{baseURL}}player"
							],
							"path": [
								"portal"
							],
							"query": [
								{
									"key": "year",
									"value": "{{year}}",
									"disabled": true
								},
								{
									"key": "team",
									"value": "{{team}}",
									"disabled": true
								},
								{
									"key": "conference",
									"value": "{{conference}}",
									"disabled": true
								},
								{
									"key": "startWeek",
									"value": "{{startWeek}}",
									"disabled": true
								},
								{
									"key": "endWeek",
									"value": "{{endWeek}}",
									"disabled": true
								},
								{
									"key": "seasonType",
									"value": "{{seasonType}}",
									"disabled": true
								},
								{
									"key": "category",
									"value": "{{category}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Conferences",
			"item": [
				{
					"name": "All Conferences",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}conferences",
							"host": [
								"{{baseURL}}conferences"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Conferences by League",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Set NCAA Division",
									"//fbs, fcs, ii, iii",
									"pm.environment.set(\"ncaaDivision\", \"\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})",
									"",
									"//Get all conferences in FBS",
									"//Select league (\"fbs\", \"fcs\", \"ii\", \"iii\")",
									"const league = pm.response.json();",
									"for (i=0;i<league.length;i++){",
									"    if (league[i].classification == pm.environment.get(\"ncaaDivision\")){ //change league here for different results. Check console for results.",
									"        console.log(pm.environment.get(\"ncaaDivision\") + \": \" + league[i].name)};",
									"};"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}conferences?ncaaDivision={{ncaaDivision}}",
							"host": [
								"{{baseURL}}conferences"
							],
							"query": [
								{
									"key": "ncaaDivision",
									"value": "{{ncaaDivision}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Venues",
			"item": [
				{
					"name": "Arena and Venue Information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}venues",
							"host": [
								"{{baseURL}}venues"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Coaches",
			"item": [
				{
					"name": "Coaching Records and History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"firstName\", \"\");",
									"pm.environment.set(\"lastName\", \"\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}coaches",
							"host": [
								"{{baseURL}}coaches"
							],
							"query": [
								{
									"key": "firstName",
									"value": "{{firstName}}",
									"disabled": true
								},
								{
									"key": "lastName",
									"value": "{{lastName}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Rankings",
			"item": [
				{
					"name": "Top 25",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    pm.expect(pm.response.json()).to.be.a('array');",
									"})",
									"",
									"//Test if a valid year was passed. Polling years: 1936-Present",
									"pm.test(\"Valid year for polling\", function() {",
									"    pm.expect(pm.response.json()[0].season).to.be.above(1935) && pm.expect(pm.response.json()[0].season).to.be.below(2024);",
									"});",
									"",
									"pm.test(\"Valid week for polling\", function() {",
									"    pm.expect(pm.response.json()[0].week).to.be.above(0) && pm.expect(pm.response.json()[0].week).to.be.below(16);",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Set Year",
									"pm.environment.set(\"year\", \"\");",
									"",
									"if (pm.environment.get(\"year\") >= 2024 || pm.environment.get(\"year\") <= 1935) {",
									"    console.log(\"Error: Polling does not exist for this year,\")",
									"}",
									"",
									"//Set Week (1-15)",
									"pm.environment.set(\"week\", \"\");",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer AW4gvTa981zdjJ/FnaXNcqtpjqMb5RiqszakJ/kSPXx8pxn/39sAWd/kJn0EoX7T"
							}
						],
						"url": {
							"raw": "{{baseURL}}rankings?year={{year}}&week={{week}}",
							"host": [
								"{{baseURL}}rankings"
							],
							"query": [
								{
									"key": "year",
									"value": "{{year}}"
								},
								{
									"key": "week",
									"value": "{{week}}"
								},
								{
									"key": "seasonType",
									"value": "{{seasonType}}",
									"disabled": true
								}
							]
						},
						"description": "This request produces the top 25 ranked teams for different polls. Set parameters for a given year and week within that year for either the regular season or post-season."
					},
					"response": []
				}
			],
			"description": "This folder hosts API calls that display team rankings for given years."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "api.collegefootballdata.com/",
			"type": "string"
		}
	]
}
